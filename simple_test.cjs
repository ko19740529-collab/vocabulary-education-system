// „Ç∑„É≥„Éó„É´„Å™„ÉÜ„Çπ„ÉàÂÆüË°å
const puppeteer = require('puppeteer');

async function simpleTest() {
    console.log('üîç „Ç∑„É≥„Éó„É´„ÉÜ„Çπ„ÉàÈñãÂßã...');
    
    let browser;
    try {
        browser = await puppeteer.launch({
            headless: 'new',
            args: ['--no-sandbox']
        });
        
        const page = await browser.newPage();
        
        // „É≠„Ç∞„Çí„Ç≠„É£„Éó„ÉÅ„É£
        page.on('console', msg => console.log(`[${msg.type()}] ${msg.text()}`));
        page.on('pageerror', error => console.error(`[ERROR] ${error.message}`));
        
        // „Éö„Éº„Ç∏„É≠„Éº„Éâ
        await page.goto('http://localhost:3000', { waitUntil: 'load' });
        console.log('‚úÖ „Éö„Éº„Ç∏„É≠„Éº„ÉâÂÆå‰∫Ü');
        
        // 2ÁßíÂæÖ„Å§
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // „Éá„Éê„ÉÉ„Ç∞„ÉÜ„Çπ„ÉàÂÆüË°å
        console.log('üß™ „Éá„Éê„ÉÉ„Ç∞„ÉÜ„Çπ„ÉàÂÆüË°å...');
        
        const result = await page.evaluate(() => {
            if (typeof debugPDFTest === 'function') {
                console.log('üîç debugPDFTestÂÆüË°åÈñãÂßã');
                debugPDFTest();
                return 'debugPDFTestÂÆüË°åÂÆå‰∫Ü';
            }
            return 'debugPDFTestÈñ¢Êï∞„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì';
        });
        
        console.log('üìä ÁµêÊûú:', result);
        
        // 5ÁßíÂæÖ„Å£„Å¶„É≠„Ç∞ÂèéÈõÜ
        await new Promise(resolve => setTimeout(resolve, 5000));
        
    } catch (error) {
        console.error('‚ùå „Ç®„É©„Éº:', error);
    } finally {
        if (browser) {
            await browser.close();
        }
    }
}

simpleTest();